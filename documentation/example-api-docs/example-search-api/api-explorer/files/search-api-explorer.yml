---  
components:  
  parameters:  
    allowFreeformNewLine:  
      description: "The format of new lines in the formatted address."  
      in: query  
      name: allowFreeformNewLine  
      schema:  
        default: false  
        type: boolean  
    brandSet:  
      description: "A comma-separated list of brand names which could be used to restrict the result to Points Of Interest of specific brands."  
      in: query  
      name: brandSet  
      schema:  
        type: string  
    btmRight:  
      description: "Bottom right position of the bounding box. This is specified as a comma separated string composed of lat., lon."  
      in: query
      name: btmRight
      schema: 
        type: string
    categorySet: 
      description: |-
          A comma-separated list of categories which could be used to restrict the result to Points Of Interest of specific categories. The list of categories can be discovered using the <a href="/search-api/search-api-documentation/poi-categories" target="_blank">POI Categories endpoint</a>.
          Note: In the following "example:", "7315" indicates a "restaurant".
      in: query
      name: categorySet
      example: 7315
      schema: 
        type: string
    connectorSet: 
      description: "A comma-separated list of connector types which could be used to restrict the result to Points Of Interest of type Electric Vehicle Station supporting specific connector types. <a href=\"/search-api/search-api-documentation/supported-connector-types\" target=\"_blank\">List of supported connector types</a>."  
      in: query
      name: connectorSet
      schema: 
        type: string
    countryCode: 
      description: "2 or 3 letter country code (e.g.: FR, ES)."  
      example: NL
      in: query
      name: countryCode
      required: true
      schema: 
        type: string
    countrySecondarySubdivision: 
      description: "The county for the structured address."  
      in: query
      name: countrySecondarySubdivision
      schema: 
        type: string
    countrySet: 
      description: "Comma separated string of country codes. This will limit the search to the specified countries."  
      in: query
      name: countrySet
      schema: 
        type: string
    countrySubdivision: 
      description: "The state or province for the structured address."  
      in: query
      name: countrySubdivision
      schema: 
        type: string
    countryTertiarySubdivision: 
      description: "The named area for the structured address."  
      in: query
      name: countryTertiarySubdivision
      schema: 
        type: string
    crossStreet: 
      description: "The cross street name for the structured address."  
      in: query
      name: crossStreet
      schema: 
        type: string
    entityTypeSet: 
      description: "A comma-separated list of entity types which can be used to restrict the result to the Geography result of a specific entity type. If entityTypeSet is specified, only a Geography result with a proper entity type will be returned."  
      in: query
      name: entityTypeSet
      schema: 
        enum: 
          - Country
          - CountrySubdivision
          - CountrySecondarySubdivision
          - CountryTertiarySubdivision
          - Municipality
          - MunicipalitySubdivision
          - MunicipalitySecondarySubdivision
          - Neighbourhood
          - PostalCodeArea
        type: string
    ext: 
      description: "Expected response format."  
      example: json
      in: path
      name: ext
      required: true
      schema: 
        enum: 
          - json
          - jsonp
          - js
          - xml
        type: string
    extendedPostalCodesFor: 
      description: |-
          Indexes for which extended postal codes should be included in the results. Available indexes are:
            - <b>Addr</b> = Address ranges
            - <b>Geo</b> = Geographies
            - <b>PAD</b> = Point Addresses
            - <b>POI</b> = Points of Interest
            - <b>Str</b> = Streets
            - <b>XStr</b> = Cross Streets (intersections)
      in: query
      name: extendedPostalCodesFor
      schema: 
        type: string
    fuelSet: 
      description: "A comma-separated list of fuel types which could be used to restrict the result to the Points Of Interest of specific fuels. If fuelSet is specified, the query can remain empty. Only POIs with a proper fuel type will be returned."  
      explode: false
      in: query
      name: fuelSet
      schema: 
        items: 
          enum: 
            - Petrol
            - LPG
            - Diesel
            - Biodiesel
            - DieselForCommercialVehicles
            - E85
            - LNG
            - CNG
            - Hydrogen
            - AdBlue
        type: array
    idxSet: 
      description: |-
          A comma separated list of indexes which should be utilized for the search. Item order does not matter. Available indexes are:
            - <b>Addr</b> = Address range interpolation (when there is no PAD)
            - <b>Geo</b> = Geographies
            - <b>PAD</b> = Point Addresses
            - <b>POI</b> = Points of interest
            - <b>Str</b> = Streets
            - <b>Xstr</b> = Cross Streets (intersections)
      in: query
      name: idxSet
      schema: 
        type: string
    language: 
      description: "Language in which search results should be returned. Should be one of <a href=\"/search-api/search-api-documentation/supported-languages\">supported IETF language tags</a>, case insensitive."  
      in: query
      name: language
      schema: 
        type: string
    lat: 
      description: |-
          Latitude where results should be biased.  
          NOTE: supplying a lat/lon without a radius will return search results biased to that point.  
      example: 37.337
      in: query
      name: lat
      schema: 
        format: float
        maximum: 90
        minimum: -90
        type: number
    limit: 
      description: "Maximum number of search results that will be returned."  
      in: query
      name: limit
      schema: 
        maximum: 100
        type: integer
    lon: 
      description: |-
          Longitude where results should be biased.  
          NOTE: supplying a lat/lon without a radius will return search results biased to that point.  
      example: -121.89
      in: query
      name: lon
      schema: 
        format: float
        maximum: 180
        minimum: -180
        type: number
    mapcodes: 
      description: "Enables the return of a comma-separated mapcodes list. Can also filter the response to only show selected mapcode types. See <a href=\"/search-api/search-api-documentation-search/fuzzy-search#mapcodes\" target=\"_blank\">Mapcodes in the response</a>."  
      in: query
      name: mapcodes
      schema: 
        type: string
    maxFuzzyLevel: 
      description: "Maximum fuzziness level to be used."  
      in: query
      name: maxFuzzyLevel
      schema: 
        default: 2
        maximum: 4
        minimum: 1
        type: integer
    maxPowerKW: 
      description: "An optional parameter which could be used to restrict the result to the Points Of Interest of type Electric Vehicle Station supporting at least one connector with a specific maximum value of power in kilowatts (closed interval - with that value)."  
      in: query
      name: maxPowerKW
      schema: 
        format: double
        type: number
    minFuzzyLevel: 
      description: "Minimum fuzziness level to be used."  
      in: query
      name: minFuzzyLevel
      schema: 
        default: 1
        maximum: 4
        minimum: 1
        type: integer
    minPowerKW: 
      description: "An optional parameter which could be used to restrict the result to the Points Of Interest of type Electric Vehicle Station supporting at least one connector with a specific minimal value of power in kilowatts (closed interval - with that value)."  
      in: query
      name: minPowerKW
      schema: 
        format: double
        type: number
    municipality: 
      description: "The municipality (city/town) for the structured address."  
      example: Amsterdam
      in: query
      name: municipality
      schema: 
        type: string
    municipalitySubdivision:
      description: "The municipality subdivision (sub city) for the structured address."
      in: query
      name: municipalitySubdivision
      schema: 
        type: string
    municipalitySecondarySubdivision:
      description: "The municipality secondary subdivision (sub sub city) for the structured address."
      in: query
      name: municipalitySecondarySubdivision
      schema:
        type: string
    ofs: 
      description: "Starting offset of the returned results within the full result set."  
      in: query
      name: ofs
      schema: 
        type: integer
    openingHours: 
      description: "List of opening hours for a POI."  
      in: query
      name: openingHours
      schema: 
        enum: 
          - nextSevenDays
        type: string
    position: 
      description: "This is specified as a comma separated string composed of lat., lon."  
      example: "37.8328,-122.27669"  
      in: path
      name: position
      required: true
      schema: 
        type: string
    postalCode: 
      description: "The zip code or postal code for the structured address."  
      in: query
      name: postalCode
      schema: 
        type: string
    radius: 
      description: "If radius <b>and</b> position are set, the results will be constrained to the defined area. The radius parameter is specified in meters."  
      in: query
      name: radius
      schema: 
        type: integer
    relatedPois: 
      description: "An optional parameter that provides the possibility to return related Points Of Interest."  
      in: query
      name: relatedPois
      schema: 
        default: off
        enum: 
          - off
          - child
          - parent
          - all
        type: string
    routingTimeout: 
      description: "Only return results that arrive from routing engine within this time limit."  
      in: query
      name: routingTimeout
      schema: 
        default: 4000
        type: integer
    storeResult: 
      deprecated: true
      description: "If the \"storeResult\" flag is set, the query will be interpreted as a stored geocode and it will be billed according to the terms of use."  
      in: query
      name: storeResult
      schema: 
        default: false
        type: boolean
    streetName: 
      description: "The street name for the structured address."
      in: query
      name: streetName
      schema: 
        type: string
    streetNumber: 
      description: "The street number for the structured address."
      in: query
      name: streetNumber
      schema: 
        type: string
    timeZone: 
      description: "Used to indicate the mode in which the timeZone object should be returned."
      in: query
      name: timeZone
      schema: 
        enum: 
          - iana
        type: string
    topLeft: 
      description: "Top left position of the bounding box. This is specified as a comma separated string composed of lat., lon."
      in: query
      name: topLeft
      schema: 
        type: string
    typeahead: 
      description: "If the \"typeahead\" flag is set, the query will be interpreted as a partial input and the search will enter <b>predictive</b> mode."
      in: query
      name: typeahead
      schema: 
        type: boolean
    versionNumber: 
      description: "Service version number. The current value is 2."
      in: path
      name: versionNumber
      required: true
      schema: 
        enum: 
          - 2
        type: integer
    view: 
      description: "Geopolitical View."
      in: query
      name: view
      required: false
      schema: 
        default: Unified
        enum: 
          - Unified
          - IL
          - IN
          - MA
          - PK
          - RU
          - TR
          - CN
        type: string
  responses: 
    200: 
      description: "OK: the search successfully returned zero or more results."
    400: 
      description: "Bad Request: one or more parameters were incorrectly specified."
    403: 
      description: |-
          Forbidden: possible causes include:
            - Service requires SSL
            - Not authorized
            - Rate or volume limit exceeded
            - Unknown referrer
    404596: 
      description: "Not Found: the HTTP request method (GET, POST, etc) or path is incorrect."
    405: 
      description: "Method Not Allowed: the HTTP method (GET, POST, etc) is not supported for this request."
    429: 
      description: "Too Many Requests: Rate or volume limit exceeded"
    5xx: 
      description: "An error occurred while processing the request. Please try again later."
  securitySchemes: 
    api_key: 
      in: query
      name: key
      type: apiKey
info: 
  contact: 
    name: "Contact Us"
    url: "https://developer.Example.com/contact-us"
  description: |-
      The Example Search API is a RESTful API that allows developers to run a single line fuzzy search for addresses and POIs. Search API returns the latitude/longitude of a specific address, cross street, geographic feature, or point of interest (POI).

      Here are some potential use cases.

        - Search for an address, a POI (Points Of Interest), or a combination of both.
        - Search for area, for example: "Chinatown".
        - Search in the direction you are heading.
        - Search for a POI near a POI or address, for example:
          - "Coffee near XYZ company"
          - "Restaurants on Main Street"
          - "ATMs near AMC Theater"
          - "Parking near 1234 Main Street"
  
  
  title: "Search API"
  version: "1.0.0"
openapi: "3.0.0"
paths: 
  ? "/search/{versionNumber}/additionalData.{ext}"
  : 
    get: 
      parameters: 
        - 
          $ref: "#/components/parameters/versionNumber"
        - 
          description: "Expected response format."
          in: path
          name: ext
          required: true
          schema: 
            enum: 
              - json
            type: string
        - 
          description: "Comma separated list of geometry UUIDs, previously retrieved from an Search API request."
          example: "00004631-3400-3c00-0000-0000673c4d2e,00004631-3400-3c00-0000-0000673c42fe"
          in: query
          name: geometries
          required: true
          schema: 
            type: string
        - 
          description: "Defines the precision of the geometries."
          in: query
          name: geometriesZoom
          schema: 
            enum: 
              - 0
              - 1
              - 2
              - 3
              - 4
              - 5
              - 6
              - 7
              - 8
              - 9
              - 10
              - 11
              - 12
              - 13
              - 14
              - 15
              - 16
              - 17
              - 18
              - 19
              - 20
              - 21
              - 22
            type: integer
      responses: 
        ? "200"
        : 
          description: "OK: additional data were retrieved and the body of the response contains requested data."
        ? "400"
        : 
          description: "Bad request: one or more parameters(i.e. geometries, ext) were incorrectly specified."
        ? "403"
        : 
          description: |-
              Permission, capacity, or authentication issues:
                - Forbidden
                - Not authorized
                - Account inactive
                - Account over queries per second limit
                - Account over rate limit
                - Rate limit exceeded
        ? "404"
        : 
          description: "Not Found: the requested resource could not be found, but it may be available again in the future."
        ? "405"
        : 
          description: "Method Not Allowed: the client used a HTTP method other than GET."
        ? "408"
        : 
          description: "Request timeout."
        ? "414"
        : 
          description: "Requested uri is too long."
        ? "500"
        : 
          description: "An error occurred while processing the request. Please try again later."
        ? "502"
        : 
          description: "Internal network connectivity issue."
        ? "503"
        : 
          description: "Service currently unavailable."
        ? "504"
        : 
          description: "Internal network connectivity issue or a request that has taken too long to complete."
        ? "596"
        : 
          description: "Service not found."
      summary: "Additional Data"
      tags: 
        - "Additional Data"
  ? "/search/{versionNumber}/cS/{category}.{ext}"
  : 
    get: 
      deprecated: true
      parameters: 
        - 
          $ref: "#/components/parameters/versionNumber"
        - 
          description: "Query string. Must be properly URL encoded."
          example: pizza
          in: path
          name: category
          schema:
            type: string
        - 
          $ref: "#/components/parameters/ext"
        - 
          $ref: "#/components/parameters/typeahead"
        - 
          $ref: "#/components/parameters/limit"
        - 
          $ref: "#/components/parameters/ofs"
        - 
          $ref: "#/components/parameters/countrySet"
        - 
          $ref: "#/components/parameters/lat"
        - 
          $ref: "#/components/parameters/lon"
        - 
          $ref: "#/components/parameters/radius"
        - 
          $ref: "#/components/parameters/topLeft"
        - 
          $ref: "#/components/parameters/btmRight"
        - 
          $ref: "#/components/parameters/language"
        - 
          $ref: "#/components/parameters/idxSet"
        - 
          $ref: "#/components/parameters/view"
      responses: 
        ? "200"
        : 
          $ref: "#/components/responses/200"
        ? "400"
        : 
          $ref: "#/components/responses/400"
        ? "403"
        : 
          $ref: "#/components/responses/403"
        ? "404"
        : 
          $ref: "#/components/responses/404596"
        ? "405"
        : 
          $ref: "#/components/responses/405"
        ? "429"
        : 
          $ref: "#/components/responses/429"
        ? "596"
        : 
          $ref: "#/components/responses/404596"
        5XX: 
          $ref: "#/components/responses/5xx"
      summary: "Low Bandwidth Category Search"
      tags: 
        - Search
  ? "/search/{versionNumber}/categorySearch/{query}.{ext}"
  : 
    get: 
      parameters: 
        - 
          $ref: "#/components/parameters/versionNumber"
        - 
          description: "Query string. Must be properly URL encoded."
          example: pizza
          in: path
          name: query
          schema:
            type: string
        - 
          $ref: "#/components/parameters/ext"
        - 
          $ref: "#/components/parameters/typeahead"
        - 
          $ref: "#/components/parameters/limit"
        - 
          $ref: "#/components/parameters/ofs"
        - 
          $ref: "#/components/parameters/countrySet"
        - 
          $ref: "#/components/parameters/lat"
        - 
          $ref: "#/components/parameters/lon"
        - 
          $ref: "#/components/parameters/radius"
        - 
          $ref: "#/components/parameters/topLeft"
        - 
          $ref: "#/components/parameters/btmRight"
        - 
          $ref: "#/components/parameters/language"
        - 
          $ref: "#/components/parameters/extendedPostalCodesFor"
        - 
          $ref: "#/components/parameters/categorySet"
        - 
          $ref: "#/components/parameters/brandSet"
        - 
          $ref: "#/components/parameters/connectorSet"
        - 
          $ref: "#/components/parameters/minPowerKW"
        - 
          $ref: "#/components/parameters/maxPowerKW"
        - 
          $ref: "#/components/parameters/fuelSet"
        - 
          $ref: "#/components/parameters/view"
        - 
          $ref: "#/components/parameters/openingHours"
        - 
          $ref: "#/components/parameters/mapcodes"
        - 
          $ref: "#/components/parameters/timeZone"
        - 
          $ref: "#/components/parameters/relatedPois"
      responses: 
        ? "200"
        : 
          $ref: "#/components/responses/200"
        ? "400"
        : 
          $ref: "#/components/responses/400"
        ? "403"
        : 
          $ref: "#/components/responses/403"
        ? "404"
        : 
          $ref: "#/components/responses/404596"
        ? "405"
        : 
          $ref: "#/components/responses/405"
        ? "429"
        : 
          $ref: "#/components/responses/429"
        ? "596"
        : 
          $ref: "#/components/responses/404596"
        5XX: 
          $ref: "#/components/responses/5xx"
      summary: "Category Search"
      tags: 
        - Search
  ? "/search/{versionNumber}/geometryFilter.{ext}"
  : 
    get: 
      parameters: 
        - 
          $ref: "#/components/parameters/versionNumber"
        - 
          $ref: "#/components/parameters/ext"
        - 
          description: "List of geometries to filter by. Available types are CIRCLE (with the radius expressed in meters) and POLYGON."
          example: "[{\"type\":\"CIRCLE\", \"position\":\"40.80558, -73.96548\", \"radius\":100}, {\"type\":\"POLYGON\", \"vertices\":[\"37.7524152343544, -122.43576049804686\", \"37.70660472542312, -122.43301391601562\", \"37.712059855877314, -122.36434936523438\", \"37.75350561243041, -122.37396240234374\"]}]"
          in: query
          name: geometryList
          required: true
          schema: 
            type: string
        - 
          description: "List of POIs to filter. The only required attribute of a POI is position, everything else is optional and will be echoed back when passed in."
          example: "[{\"poi\":{\"name\":\"S Restaurant Toms\"},\"address\":{\"freeformAddress\":\"2880 Broadway, New York, NY 10025\"},\"position\":{\"lat\":40.80558,\"lon\":-73.96548}},{\"poi\":{\"name\":\"Yasha Raman Corporation\"},\"address\":{\"freeformAddress\":\"940 Amsterdam Ave, New York, NY 10025\"},\"position\":{\"lat\":40.80076,\"lon\":-73.96556}}]"
          in: query
          name: poiList
          required: true
          schema: 
            type: string
      responses: 
        ? "200"
        : 
          $ref: "#/components/responses/200"
        ? "400"
        : 
          $ref: "#/components/responses/400"
        ? "403"
        : 
          $ref: "#/components/responses/403"
        ? "404"
        : 
          $ref: "#/components/responses/404596"
        ? "405"
        : 
          $ref: "#/components/responses/405"
        ? "429"
        : 
          $ref: "#/components/responses/429"
        ? "596"
        : 
          $ref: "#/components/responses/404596"
        5XX: 
          $ref: "#/components/responses/5xx"
      summary: "Geometry Filter"
      tags: 
        - Filters
    post: 
      parameters: 
        - 
          $ref: "#/components/parameters/versionNumber"
        - 
          $ref: "#/components/parameters/ext"
      requestBody: 
        content: 
          application/json: 
            schema: 
              example: 
                geometryList: 
                  - 
                    position: "40.80558,-73.96548"
                    radius: 100
                    type: CIRCLE
                  - 
                    type: POLYGON
                    vertices: 
                      - "37.7524152343544,-122.43576049804686"
                      - "37.70660472542312,-122.43301391601562"
                      - "37.712059855877314,-122.36434936523438"
                      - "37.75350561243041,-122.37396240234374"
                poiList: 
                  - 
                    address: 
                      freeformAddress: "2880 Broadway, New York, NY 10025"
                    poi: 
                      name: "S Restaurant Tom's"
                    position: 
                      lat: 40.80558
                      lon: -73.96548
              properties: 
                geometryList: 
                  items: 
                    properties: 
                      position: 
                        type: string
                      radius: 
                        type: integer
                      type: 
                        type: string
                      vertices: 
                        items: 
                          type: string
                        type: array
                    type: object
                  type: array
                poiList: 
                  items: 
                    properties: 
                      address: 
                        properties: 
                          freeformAddress: 
                            type: string
                        type: object
                      poi: 
                        properties: 
                          name: 
                            type: string
                        type: object
                      position: 
                        properties: 
                          lat: 
                            format: float
                            type: number
                          lon: 
                            format: float
                            type: number
                        type: object
                    type: object
                  type: array
              type: object
      responses: 
        ? "200"
        : 
          $ref: "#/components/responses/200"
        ? "400"
        : 
          $ref: "#/components/responses/400"
        ? "403"
        : 
          $ref: "#/components/responses/403"
        ? "404"
        : 
          $ref: "#/components/responses/404596"
        ? "405"
        : 
          $ref: "#/components/responses/405"
        ? "429"
        : 
          $ref: "#/components/responses/429"
        ? "596"
        : 
          $ref: "#/components/responses/404596"
        5XX: 
          $ref: "#/components/responses/5xx"
      summary: "Geometry Filter"
      tags: 
        - Filters
  ? "/search/{versionNumber}/geometrySearch/{query}.{ext}"
  : 
    get: 
      parameters: 
        - 
          $ref: "#/components/parameters/versionNumber"
        - 
          description: "Query string. Must be properly URL encoded."
          example: pizza
          in: path
          name: query
          schema:
            type: string
        - 
          $ref: "#/components/parameters/ext"
        - 
          description: "List of geometries to filter by. Available types are CIRCLE (with the radius expressed in meters) and POLYGON."
          example: "[{\"type\":\"POLYGON\", \"vertices\":[\"37.7524152343544, -122.43576049804686\", \"37.70660472542312, -122.43301391601562\", \"37.712059855877314, -122.36434936523438\", \"37.75350561243041, -122.37396240234374\"]}, {\"type\":\"CIRCLE\", \"position\":\"37.71205, -121.36434\", \"radius\":6000}, {\"type\":\"CIRCLE\", \"position\":\"37.31205, -121.36434\", \"radius\":1000}]"
          in: query
          name: geometryList
          required: true
          schema: 
            type: string
        - 
          $ref: "#/components/parameters/limit"
        - 
          $ref: "#/components/parameters/language"
        - 
          $ref: "#/components/parameters/extendedPostalCodesFor"
        - 
          $ref: "#/components/parameters/idxSet"
        - 
          $ref: "#/components/parameters/categorySet"
        - 
          $ref: "#/components/parameters/brandSet"
        - 
          $ref: "#/components/parameters/connectorSet"
        - 
          $ref: "#/components/parameters/minPowerKW"
        - 
          $ref: "#/components/parameters/maxPowerKW"
        - 
          $ref: "#/components/parameters/fuelSet"
        - 
          $ref: "#/components/parameters/view"
        - 
          $ref: "#/components/parameters/openingHours"
        - 
          $ref: "#/components/parameters/timeZone"
        - 
          $ref: "#/components/parameters/mapcodes"
        - 
          $ref: "#/components/parameters/relatedPois"
        - 
          $ref: "#/components/parameters/entityTypeSet"
      responses: 
        ? "200"
        : 
          $ref: "#/components/responses/200"
        ? "400"
        : 
          $ref: "#/components/responses/400"
        ? "403"
        : 
          $ref: "#/components/responses/403"
        ? "404"
        : 
          $ref: "#/components/responses/404596"
        ? "405"
        : 
          $ref: "#/components/responses/405"
        ? "429"
        : 
          $ref: "#/components/responses/429"
        ? "596"
        : 
          $ref: "#/components/responses/404596"
        5XX: 
          $ref: "#/components/responses/5xx"
      summary: "Geometry Search"
      tags: 
        - Search
    post: 
      parameters: 
        - 
          $ref: "#/components/parameters/versionNumber"
        - 
          description: "Query string. Must be properly URL encoded."
          example: pizza
          in: path
          name: query
          schema:
            type: string
        - 
          $ref: "#/components/parameters/ext"
        - 
          $ref: "#/components/parameters/limit"
        - 
          $ref: "#/components/parameters/language"
        - 
          $ref: "#/components/parameters/extendedPostalCodesFor"
        - 
          $ref: "#/components/parameters/idxSet"
        - 
          $ref: "#/components/parameters/categorySet"
        - 
          $ref: "#/components/parameters/brandSet"
        - 
          $ref: "#/components/parameters/connectorSet"
        - 
          $ref: "#/components/parameters/minPowerKW"
        - 
          $ref: "#/components/parameters/maxPowerKW"
        - 
          $ref: "#/components/parameters/fuelSet"
        - 
          $ref: "#/components/parameters/view"
        - 
          $ref: "#/components/parameters/openingHours"
        - 
          $ref: "#/components/parameters/timeZone"
        - 
          $ref: "#/components/parameters/mapcodes"
        - 
          $ref: "#/components/parameters/relatedPois"
        - 
          $ref: "#/components/parameters/entityTypeSet"
      requestBody: 
        content: 
          application/json: 
            schema: 
              example: 
                geometryList: 
                  - 
                    type: POLYGON
                    vertices: 
                      - "37.7524152343544,-122.43576049804686"
                      - "37.70660472542312,-122.43301391601562"
                      - "37.712059855877314,-122.36434936523438"
                      - "37.75350561243041,-122.37396240234374"
                  - 
                    position: "37.71205,-121.36434"
                    radius: 6000
                    type: CIRCLE
                  - 
                    position: "37.31205,-121.36434"
                    radius: 1000
                    type: CIRCLE
              properties: 
                geometryList: 
                  items: 
                    properties: 
                      position: 
                        type: string
                      radius: 
                        type: integer
                      type: 
                        type: string
                      vertices: 
                        items: 
                          type: string
                        type: array
                    type: object
                  type: array
              type: object
      responses: 
        ? "200"
        : 
          $ref: "#/components/responses/200"
        ? "400"
        : 
          $ref: "#/components/responses/400"
        ? "403"
        : 
          $ref: "#/components/responses/403"
        ? "404"
        : 
          $ref: "#/components/responses/404596"
        ? "405"
        : 
          $ref: "#/components/responses/405"
        ? "429"
        : 
          $ref: "#/components/responses/429"
        ? "596"
        : 
          $ref: "#/components/responses/404596"
        5XX: 
          $ref: "#/components/responses/5xx"
      summary: "Geometry Search"
      tags: 
        - Search
  ? "/search/{versionNumber}/nearbySearch/.{ext}"
  : 
    get: 
      parameters: 
        - 
          $ref: "#/components/parameters/versionNumber"
        - 
          $ref: "#/components/parameters/ext"
        - 
          description: |-
              Latitude where results should be biased.  
              NOTE: supplying a lat/lon without a radius will return search results biased to that point.
          example: 37.337
          in: query
          name: lat
          required: true
          schema: 
            format: float
            type: number
        - 
          description: |-
              Longitude where results should be biased
              NOTE: supplying a lat/lon without a radius will return search results biased to that point.
          example: -121.89
          in: query
          name: lon
          required: true
          schema: 
            format: float
            type: number
        - 
          $ref: "#/components/parameters/limit"
        - 
          $ref: "#/components/parameters/ofs"
        - 
          $ref: "#/components/parameters/countrySet"
        - 
          description: "If radius and position are set, the results will be constrained to the defined area. The radius parameter is specified in meters."
          in: query
          name: radius
          schema: 
            default: 10000
            maximum: 50000
            type: integer
        - 
          deprecated: true
          description: "Top left position of the bounding box. This is specified as a comma separated string composed of lat., lon."
          in: query
          name: topLeft
          schema: 
            type: string
        - 
          deprecated: true
          description: "Bottom right position of the bounding box. This is specified as a comma separated string composed of lat., lon."
          in: query
          name: btmRight
          schema: 
            type: string
        - 
          $ref: "#/components/parameters/language"
        - 
          $ref: "#/components/parameters/extendedPostalCodesFor"
        - 
          $ref: "#/components/parameters/categorySet"
        - 
          $ref: "#/components/parameters/brandSet"
        - 
          $ref: "#/components/parameters/connectorSet"
        - 
          $ref: "#/components/parameters/minPowerKW"
        - 
          $ref: "#/components/parameters/maxPowerKW"
        - 
          $ref: "#/components/parameters/fuelSet"
        - 
          $ref: "#/components/parameters/view"
        - 
          $ref: "#/components/parameters/openingHours"
        - 
          $ref: "#/components/parameters/mapcodes"
        - 
          $ref: "#/components/parameters/timeZone"
        - 
          $ref: "#/components/parameters/relatedPois"
      responses: 
        ? "200"
        : 
          $ref: "#/components/responses/200"
        ? "400"
        : 
          $ref: "#/components/responses/400"
        ? "403"
        : 
          $ref: "#/components/responses/403"
        ? "404"
        : 
          $ref: "#/components/responses/404596"
        ? "405"
        : 
          $ref: "#/components/responses/405"
        ? "429"
        : 
          $ref: "#/components/responses/429"
        ? "596"
        : 
          $ref: "#/components/responses/404596"
        5XX: 
          $ref: "#/components/responses/5xx"
      summary: "Nearby Search"
      tags: 
        - Search
  ? "/search/{versionNumber}/poiCategories.{ext}"
  : 
    get: 
      parameters: 
        - 
          $ref: "#/components/parameters/versionNumber"
        - 
          description: "Expected response format."
          in: path
          name: ext
          required: true
          schema: 
            enum: 
              - json
              - jsonp
              - js
              - xml
            type: string
        - 
          $ref: "#/components/parameters/language"
      responses: 
        ? "200"
        : 
          description: "OK: The search successfully returned result."
        ? "400"
        : 
          $ref: "#/components/responses/400"
        ? "403"
        : 
          $ref: "#/components/responses/403"
        ? "404"
        : 
          $ref: "#/components/responses/404596"
        ? "405"
        : 
          $ref: "#/components/responses/405"
        ? "429"
        : 
          $ref: "#/components/responses/429"
        ? "596"
        : 
          $ref: "#/components/responses/404596"
        5XX: 
          $ref: "#/components/responses/5xx"
      summary: "POI Categories"
      tags: 
        - "POI Categories"
  ? "/search/{versionNumber}/poiSearch/{query}.{ext}"
  : 
    get: 
      parameters: 
        - 
          $ref: "#/components/parameters/versionNumber"
        - 
          description: "Query string. Must be properly URL encoded."
          example: pizza
          in: path
          name: query
          schema:
            type: string
        - 
          $ref: "#/components/parameters/ext"
        - 
          $ref: "#/components/parameters/typeahead"
        - 
          $ref: "#/components/parameters/limit"
        - 
          $ref: "#/components/parameters/ofs"
        - 
          $ref: "#/components/parameters/countrySet"
        - 
          $ref: "#/components/parameters/lat"
        - 
          $ref: "#/components/parameters/lon"
        - 
          $ref: "#/components/parameters/radius"
        - 
          $ref: "#/components/parameters/topLeft"
        - 
          $ref: "#/components/parameters/btmRight"
        - 
          $ref: "#/components/parameters/language"
        - 
          $ref: "#/components/parameters/extendedPostalCodesFor"
        - 
          $ref: "#/components/parameters/categorySet"
        - 
          $ref: "#/components/parameters/brandSet"
        - 
          $ref: "#/components/parameters/connectorSet"
        - 
          $ref: "#/components/parameters/minPowerKW"
        - 
          $ref: "#/components/parameters/maxPowerKW"
        - 
          $ref: "#/components/parameters/fuelSet"
        - 
          $ref: "#/components/parameters/view"
        - 
          $ref: "#/components/parameters/openingHours"
        - 
          $ref: "#/components/parameters/mapcodes"
        - 
          $ref: "#/components/parameters/timeZone"
        - 
          $ref: "#/components/parameters/relatedPois"
      responses: 
        ? "200"
        : 
          $ref: "#/components/responses/200"
        ? "400"
        : 
          $ref: "#/components/responses/400"
        ? "403"
        : 
          $ref: "#/components/responses/403"
        ? "404"
        : 
          $ref: "#/components/responses/404596"
        ? "405"
        : 
          $ref: "#/components/responses/405"
        ? "429"
        : 
          $ref: "#/components/responses/429"
        ? "596"
        : 
          $ref: "#/components/responses/404596"
        5XX: 
          $ref: "#/components/responses/5xx"
      summary: "Points of Interest Search"
      tags: 
        - Search  
  ? "/search/{versionNumber}/routedFilter/{position}/{heading}.{ext}"
  : 
    get: 
      deprecated: true  
      parameters: 
        - 
          $ref: "#/components/parameters/versionNumber"
        - 
          $ref: "#/components/parameters/position"
        - 
          description: "The directional heading in degrees, usually similar to the course along a road segment. Entered in degrees, measured clockwise from north (so north is 0, east is 90, etc.)"
          example: -15.6
          in: path
          name: heading
          required: true
          schema: 
            format: float
            type: number
        - 
          $ref: "#/components/parameters/ext"
        - 
          description: "List of POIs to filter. The only required attribute of a POI is position, everything else is optional and will be echoed back when passed in."
          example: "[{\"poi\":{\"name\":\"Cleaire Advanced Emission Controls\"},\"address\":{\"freeformAddress\":\"7220 Trade St, San Diego, CA 92121\"},\"position\":{\"lat\":\"37.83274\",\"lon\":\"-122.27631\"}}]"
          in: query
          name: poiList
          required: true
          schema: 
            type: string
        - 
          $ref: "#/components/parameters/routingTimeout"
      responses: 
        ? "200"
        : 
          $ref: "#/components/responses/200"
        ? "400"
        : 
          $ref: "#/components/responses/400"
        ? "403"
        : 
          $ref: "#/components/responses/403"
        ? "404"
        : 
          $ref: "#/components/responses/404596"
        ? "405"
        : 
          $ref: "#/components/responses/405"
        ? "429"
        : 
          $ref: "#/components/responses/429"
        ? "596"
        : 
          $ref: "#/components/responses/404596"
        5XX: 
          $ref: "#/components/responses/5xx"
      summary: "Routed Filter"
      tags: 
        - Filters
    post: 
      deprecated: true
      parameters: 
        - 
          $ref: "#/components/parameters/versionNumber"
        - 
          $ref: "#/components/parameters/position"
        - 
          description: "The directional heading in degrees, usually similar to the course along a road segment. Entered in degrees, measured clockwise from north (so north is 0, east is 90, etc.)"
          example: 90
          in: path
          name: heading
          required: true
          schema: 
            format: float
            type: number
        - 
          $ref: "#/components/parameters/ext"
        - 
          $ref: "#/components/parameters/routingTimeout"
      requestBody: 
        content: 
          application/json: 
            schema: 
              example: 
                poiList: 
                  - 
                    address: 
                      freeformAddress: "9500 Gilman Dr, San Diego, CA 92037"
                    poi: 
                      name: "University of California San Diego"
                    position: 
                      lat: 32.87349
                      lon: -117.2378
                  - 
                    address: 
                      freeformAddress: "7220 Trade St, San Diego, CA 92121"
                    poi: 
                      name: "Cleaire Advanced Emission Controls"
                    position: 
                      lat: 37.83274
                      lon: -122.27631
              properties: 
                poiList: 
                  items: 
                    properties: 
                      address: 
                        properties: 
                          freeformAddress: 
                            type: string
                        type: object
                      poi: 
                        properties: 
                          name: 
                            type: string
                        type: object
                      position: 
                        properties: 
                          lat: 
                            format: float
                            type: number
                          lon: 
                            format: float
                            type: number
                        type: object
                    type: object
                  type: array
              type: object
      responses: 
        ? "200"
        : 
          $ref: "#/components/responses/200"
        ? "400"
        : 
          $ref: "#/components/responses/400"
        ? "403"
        : 
          $ref: "#/components/responses/403"
        ? "404"
        : 
          $ref: "#/components/responses/404596"
        ? "405"
        : 
          $ref: "#/components/responses/405"
        ? "429"
        : 
          $ref: "#/components/responses/429"
        ? "596"
        : 
          $ref: "#/components/responses/404596"
        5XX: 
          $ref: "#/components/responses/5xx"
      summary: "Routed Filter"
      tags: 
        - Filters
  ? "/search/{versionNumber}/routedSearch/{query}/{position}/{heading}.{ext}"
  : 
    get: 
      deprecated: true
      parameters: 
        - 
          $ref: "#/components/parameters/versionNumber"
        - 
          description: "Query string. Must be properly URL encoded."
          example: gas
          in: path
          name: query
          required: true
          schema: 
            type: string
        - 
          $ref: "#/components/parameters/position"
        - 
          description: "The directional heading in degrees, usually similar to the course along a road segment. Entered in degrees, measured clockwise from north (so north is 0, east is 90, etc.)"
          example: 90
          in: path
          name: heading
          required: true
          schema: 
            format: float
            type: number
        - 
          $ref: "#/components/parameters/ext"
        - 
          $ref: "#/components/parameters/typeahead"
        - 
          $ref: "#/components/parameters/limit"
        - 
          description: "Multiplies the limit by N to gather more candidate POIs, which will then be sorted by drive distance, returning only the top candidates according to the limit."
          in: query
          name: multiplier
          schema: 
            default: 2
            type: integer
        - 
          $ref: "#/components/parameters/routingTimeout"
        - 
          $ref: "#/components/parameters/language"
        - 
          $ref: "#/components/parameters/extendedPostalCodesFor"
        - 
          $ref: "#/components/parameters/idxSet"
      responses: 
        ? "200"
        : 
          $ref: "#/components/responses/200"
        ? "400"
        : 
          $ref: "#/components/responses/400"
        ? "403"
        : 
          $ref: "#/components/responses/403"
        ? "404"
        : 
          $ref: "#/components/responses/404596"
        ? "405"
        : 
          $ref: "#/components/responses/405"
        ? "429"
        : 
          $ref: "#/components/responses/429"
        ? "596"
        : 
          $ref: "#/components/responses/404596"
        5XX: 
          $ref: "#/components/responses/5xx"
      summary: "Routed Search"
      tags: 
        - Search
  ? "/search/{versionNumber}/s/{query}.{ext}"
  : 
    get: 
      deprecated: true
      parameters: 
        - 
          $ref: "#/components/parameters/versionNumber"
        - 
          description: "Query string. Must be properly URL encoded."
          example: pizza
          in: path
          name: query
          required: true
          schema: 
            type: string
        - 
          $ref: "#/components/parameters/ext"
        - 
          $ref: "#/components/parameters/typeahead"
        - 
          $ref: "#/components/parameters/limit"
        - 
          $ref: "#/components/parameters/ofs"
        - 
          $ref: "#/components/parameters/countrySet"
        - 
          $ref: "#/components/parameters/lat"
        - 
          $ref: "#/components/parameters/lon"
        - 
          $ref: "#/components/parameters/radius"
        - 
          $ref: "#/components/parameters/topLeft"
        - 
          $ref: "#/components/parameters/btmRight"
        - 
          $ref: "#/components/parameters/language"
        - 
          $ref: "#/components/parameters/idxSet"
        - 
          $ref: "#/components/parameters/view"
      responses: 
        ? "200"
        : 
          $ref: "#/components/responses/200"
        ? "400"
        : 
          $ref: "#/components/responses/400"
        ? "403"
        : 
          $ref: "#/components/responses/403"
        ? "404"
        : 
          $ref: "#/components/responses/404596"
        ? "405"
        : 
          $ref: "#/components/responses/405"
        ? "429"
        : 
          $ref: "#/components/responses/429"
        ? "596"
        : 
          $ref: "#/components/responses/404596"
        5XX: 
          $ref: "#/components/responses/5xx"
      summary: "Low bandwith Search"
      tags: 
        - Search
  ? "/search/{versionNumber}/search/{query}.{ext}"
  : 
    get: 
      parameters: 
        - 
          $ref: "#/components/parameters/versionNumber"
        - 
          description: |-
              Query string.
                - Must be properly URL encoded.
                - A user can provide latitude and longitude coordinates or mapcodes directly in the query.
                - Details can be found in the <a href="/search-api/search-api-documentation-search/fuzzy-search#coordinates">Coordinates in query</a> documentation section and in the <a href="/search-api/search-api-documentation-search/fuzzy-search#mapcodesQuery">Mapcodes in query</a> documentation sections.
          example: pizza
          in: path
          name: query
          schema:
            type: string
        - 
          $ref: "#/components/parameters/ext"
        - 
          $ref: "#/components/parameters/typeahead"
        - 
          $ref: "#/components/parameters/limit"
        - 
          $ref: "#/components/parameters/ofs"
        - 
          $ref: "#/components/parameters/countrySet"
        - 
          $ref: "#/components/parameters/lat"
        - 
          $ref: "#/components/parameters/lon"
        - 
          $ref: "#/components/parameters/radius"
        - 
          $ref: "#/components/parameters/topLeft"
        - 
          $ref: "#/components/parameters/btmRight"
        - 
          $ref: "#/components/parameters/language"
        - 
          $ref: "#/components/parameters/extendedPostalCodesFor"
        - 
          $ref: "#/components/parameters/minFuzzyLevel"
        - 
          $ref: "#/components/parameters/maxFuzzyLevel"
        - 
          $ref: "#/components/parameters/idxSet"
        - 
          $ref: "#/components/parameters/categorySet"
        - 
          $ref: "#/components/parameters/brandSet"
        - 
          $ref: "#/components/parameters/connectorSet"
        - 
          $ref: "#/components/parameters/minPowerKW"
        - 
          $ref: "#/components/parameters/maxPowerKW"
        - 
          $ref: "#/components/parameters/fuelSet"
        - 
          $ref: "#/components/parameters/view"
        - 
          $ref: "#/components/parameters/openingHours"
        - 
          $ref: "#/components/parameters/timeZone"
        - 
          $ref: "#/components/parameters/mapcodes"
        - 
          $ref: "#/components/parameters/relatedPois"
        - 
          $ref: "#/components/parameters/entityTypeSet"
      responses: 
        ? "200"
        : 
          $ref: "#/components/responses/200"
        ? "400"
        : 
          $ref: "#/components/responses/400"
        ? "403"
        : 
          $ref: "#/components/responses/403"
        ? "404"
        : 
          $ref: "#/components/responses/404596"
        ? "405"
        : 
          $ref: "#/components/responses/405"
        ? "429"
        : 
          $ref: "#/components/responses/429"
        ? "596"
        : 
          $ref: "#/components/responses/404596"
        5XX: 
          $ref: "#/components/responses/5xx"
      summary: "Fuzzy Search"
      tags: 
        - Search
  ? "/search/{versionNumber}/searchAlongRoute/{query}.{ext}"  
  : 
    post: 
      parameters: 
        - 
          $ref: "#/components/parameters/versionNumber"
        - 
          description: "Query string. Must be properly URL encoded."  
          example: pizza
          in: path
          name: query
          schema:
            type: string
        - 
          $ref: "#/components/parameters/ext"  
        - 
          description: "Maximum detour time"
          example: 600
          in: query
          name: maxDetourTime
          required: true
          schema: 
            maximum: 3600
            type: integer
        - 
          $ref: "#/components/parameters/typeahead"
        - 
          $ref: "#/components/parameters/limit"
        - 
          $ref: "#/components/parameters/categorySet"
        - 
          $ref: "#/components/parameters/brandSet"
        - 
          $ref: "#/components/parameters/connectorSet"
        - 
          $ref: "#/components/parameters/minPowerKW"
        - 
          $ref: "#/components/parameters/maxPowerKW"
        - 
          $ref: "#/components/parameters/fuelSet"
        - 
          $ref: "#/components/parameters/view"
        - 
          description: "Parameter which turns on a calculation of the distance between the start of the route and the starting point of the detour to a POI."
          in: query
          name: detourOffset
          schema: 
            type: boolean
        - 
          description: "Parameter which provides the possibility to sort returned results."
          in: query
          name: sortBy
          schema: 
            default: detourOffset
            enum: 
              - detourTime
              - detourDistance
              - detourOffset
            type: string
        - 
          $ref: "#/components/parameters/openingHours"
        - 
          description: "Enables the spreading of returned results evenly along the route."
          in: query
          name: spreadingMode
          schema: 
            enum: 
              - auto
            type: string
        - 
          $ref: "#/components/parameters/mapcodes"
        - 
          $ref: "#/components/parameters/timeZone"
        - 
          $ref: "#/components/parameters/relatedPois"
      requestBody: 
        content: 
          application/json: 
            schema: 
              example: 
                route: 
                  points:
                    -
                      lat: 37.52768
                      lon: -122.30082
                    -
                      lat: 37.52952
                      lon: -122.29365
                    -
                      lat: 37.52987
                      lon: -122.2883
                    -
                      lat: 37.52561
                      lon: -122.28219
                    -
                      lat: 37.52091
                      lon: -122.27661
                    -
                      lat: 37.52277
                      lon: -122.27334
                    -
                      lat: 37.52432
                      lon: -122.26833
                    -
                      lat: 37.5139
                      lon: -122.25621
                    -
                      lat: 37.49881
                      lon: -122.2391
                    -
                      lat: 37.49426
                      lon: -122.2262
                    -
                      lat: 37.48792
                      lon: -122.20905
                    -
                      lat: 37.48425
                      lon: -122.18374
                    -
                      lat: 37.47642
                      lon: -122.1683
                    -
                      lat: 37.4686
                      lon: -122.15644
                    -
                      lat: 37.46981
                      lon: -122.15498
                    -
                      lat: 37.4718
                      lon: -122.15149
              properties: 
                route: 
                  properties: 
                    points: 
                      items: 
                        properties: 
                          lat: 
                            format: float
                            type: number
                          lon: 
                            format: float
                            type: number
                        type: object
                      type: array
                  type: object
              type: object
      responses: 
        ? "200"
        : 
          $ref: "#/components/responses/200"
        ? "400"
        : 
          $ref: "#/components/responses/400"
        ? "403"
        : 
          $ref: "#/components/responses/403"
        ? "404"
        : 
          $ref: "#/components/responses/404596"
        ? "405"
        : 
          $ref: "#/components/responses/405"
        ? "429"
        : 
          $ref: "#/components/responses/429"
        ? "596"
        : 
          $ref: "#/components/responses/404596"
        5XX: 
          $ref: "#/components/responses/5xx"
      summary: "Along Route Search"
      tags: 
        - Search
security: 
  - 
    api_key: []
servers: 
  - 
    url: "https://api.Example.com"
